# This is a basic workflow to help you get started with Actions

name: LLMOps auto deployment for demo-container

env:
  AZURE_CONTAINER_APP_NAME: llmcontainer555
  AZURE_GROUP_NAME: llm-container
  AZURE_CONTAINER_REGISTRY: llmcontainer555.azurecr.io

permissions:
  packages: write
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
 workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Azure container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.AZ_USERNAME }}
          password: ${{ secrets.AZ_PASSWORD }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.REPO }}:${{ github.sha }}
          file: ./Dockerfile
    deploy:
      runs-on: ubuntu-latest
      needs: build

      steps:
        - name: Azure Login
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: Lowercase the repo name and username
          run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

        - name: Deploy to containerapp
          uses: azure/CLI@v1
          with:
            inlineScript: |
              az config set extension.use_dynamic_install=yes_without_prompt
              az containerapp registry set -n ${{ env.AZURE_CONTAINER_APP_NAME }} -g ${{ env.AZURE_GROUP_NAME }} --server ${{ env.AZURE_CONTAINER_REGISTRY }} --username  ${{ secrets.AZ_USERNAME }} --password ${{ secrets.AZ_PASSWORD }}
              az containerapp update -n ${{ env.AZURE_CONTAINER_APP_NAME }} -g ${{ env.AZURE_GROUP_NAME }} --cpu 2 --memory 4Gi
              az containerapp update -n ${{ env.AZURE_CONTAINER_APP_NAME }} -g ${{ env.AZURE_GROUP_NAME }} --image ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.REPO }}:${{ github.sha }}